{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/Minos/source/css/insight.scss","path":"css/insight.scss","modified":1,"renderable":1},{"_id":"themes/Minos/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/Minos/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/Minos/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/Minos/source/images/check.svg","path":"images/check.svg","modified":1,"renderable":1},{"_id":"themes/Minos/source/images/exclamation.svg","path":"images/exclamation.svg","modified":1,"renderable":1},{"_id":"themes/Minos/source/images/info.svg","path":"images/info.svg","modified":1,"renderable":1},{"_id":"themes/Minos/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/Minos/source/images/question.svg","path":"images/question.svg","modified":1,"renderable":1},{"_id":"themes/Minos/source/images/quote-left.svg","path":"images/quote-left.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1642560520913},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"d2772ece6d4422ccdaa0359c3e07588834044052","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"9a94875cbf4c27fbe2e63da0496242addc6d2876","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"80759482d07063c091e940f964a1cf6693d3d406","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1642560536535},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1642560536535},{"_id":"source/page1/index.md","hash":"773217d775f3d696f833b171a3425afcfeb4d1e8","modified":1642560841903},{"_id":"source/_drafts/draft1.md","hash":"9a5abdde381e46c14f2e74a83dff3214d8103ca3","modified":1642560968790},{"_id":"source/_posts/post1.md","hash":"99239c95c7219074b3c3e982337e8202f3999d05","modified":1642560874503},{"_id":"source/page2/index.md","hash":"b5c8187582af8dc4b751552b254fbe77a1e71986","modified":1642560844081},{"_id":"source/_posts/webpack5 升级踩坑.md","hash":"7c8891247958817d52d6da1444f0f437b1486b1e","modified":1642562170350},{"_id":"source/_posts/为什么慢两拍：关于promise规范thenable的白话解释.md","hash":"9b5734ad45a2334c242db51a5822221ecd451ce3","modified":1642562283272},{"_id":"themes/Minos/_config.yml","hash":"c16bbed955c4209e6bfdff834fa6281eb5be417d","modified":1642563464784},{"_id":"themes/Minos/layout/archive.ejs","hash":"e3eefe819d61b4d0ee069bb705a9f5707a8bf3da","modified":1642563116913},{"_id":"themes/Minos/layout/categories.ejs","hash":"fff6f911d0f548ee749292bc1942f8fbbb1fbfe7","modified":1642563116914},{"_id":"themes/Minos/layout/category.ejs","hash":"403c646878834964883ac41e63952f7b1595c0ba","modified":1642563116914},{"_id":"themes/Minos/layout/index.ejs","hash":"dff9e199d394f82c5416b814f9e644edbe4090f0","modified":1642563116921},{"_id":"themes/Minos/layout/layout.ejs","hash":"45588aa46857cf9403fa79d738ab37a46ddcf773","modified":1642563116922},{"_id":"themes/Minos/layout/post.ejs","hash":"68b84a717efc5ca59ee9eb6202ccf05c5a8abda5","modified":1642563116924},{"_id":"themes/Minos/layout/tag.ejs","hash":"5593c7cf9618ef5650c779ed9d75424f057aa210","modified":1642563116927},{"_id":"themes/Minos/layout/tags.ejs","hash":"e4a9909119294f131a45f10b2cb1058af5fb9be1","modified":1642563116927},{"_id":"themes/Minos/languages/de.yml","hash":"3d6abea8c2990b04fcd54ffd88ab15356b5171e8","modified":1642563116910},{"_id":"themes/Minos/languages/es.yml","hash":"5c35950221411e34e7a9821d0b0671da9a458d8c","modified":1642563116910},{"_id":"themes/Minos/languages/en.yml","hash":"24b8cf6b8fc989be612333aa5121808bb8cf029b","modified":1642563116910},{"_id":"themes/Minos/languages/ko.yml","hash":"1acf3f959f1d2b4f7a77e7e82851821aa8635362","modified":1642563116911},{"_id":"themes/Minos/languages/pl.yml","hash":"cfd7c898b2841bf7a1490ebfaa3cbb40fd7da50d","modified":1642563116912},{"_id":"themes/Minos/languages/fr.yml","hash":"cca90260b00842bf73fadb3154c2969102cf80c0","modified":1642563116911},{"_id":"themes/Minos/languages/zh-cn.yml","hash":"9c5a489b11a056d1ea7b9d4a0e127aef9e192ee4","modified":1642563116913},{"_id":"themes/Minos/languages/ru.yml","hash":"dbb9bee79348e29098af6c56b14bbca6986e9795","modified":1642563116912},{"_id":"themes/Minos/languages/zh-tw.yml","hash":"f61b67b9c454d16bc3973f6cb142b98a4e19f9b0","modified":1642563116913},{"_id":"themes/Minos/lib/i18n.js","hash":"4c90aa27420e0e2ff74f80e976fe146e96354f61","modified":1642563116928},{"_id":"themes/Minos/lib/rfc5646.js","hash":"8ecf38d0ec7145720ea8e888da314131712770e8","modified":1642563116928},{"_id":"themes/Minos/scripts/01_check.js","hash":"e53508ef82a1518ed7e663ce2d87544c20a50779","modified":1642563116930},{"_id":"themes/Minos/scripts/10_i18n.js","hash":"9c1f9e3ec3c6299fc599769783925d1898a632f0","modified":1642563116930},{"_id":"themes/Minos/scripts/99_config.js","hash":"9bde31f8dcb9e7044b962713e00e52defdc85268","modified":1642563116931},{"_id":"themes/Minos/scripts/99_content.js","hash":"ff61d3d631b06024509d4fe28b4e31590a02f05b","modified":1642563116931},{"_id":"themes/Minos/scripts/99_tags.js","hash":"f97c2332a7e13fed99672b27c4380a6183d8600e","modified":1642563116931},{"_id":"themes/Minos/layout/comment/changyan.ejs","hash":"9ccc7ec354b968e60bdcfcd1dba451d38de61f12","modified":1642563116915},{"_id":"themes/Minos/layout/comment/disqus.ejs","hash":"a2becdc02214a673c804af93488489807fa2c99c","modified":1642563116915},{"_id":"themes/Minos/layout/comment/gitment.ejs","hash":"430416210933b7edcbfcc67ede4aa55539da2750","modified":1642563116916},{"_id":"themes/Minos/layout/comment/facebook.ejs","hash":"e73b6f93d98b27ba9068c1685874ecccfbac737b","modified":1642563116915},{"_id":"themes/Minos/layout/comment/isso.ejs","hash":"cc6a43bd24be764086f88ad7c5c97ff04df87e0b","modified":1642563116916},{"_id":"themes/Minos/layout/comment/livere.ejs","hash":"12ff9a345f6bba2f732f592e39508c2afde89b00","modified":1642563116917},{"_id":"themes/Minos/layout/comment/valine.ejs","hash":"b0eef3bea0a54b4b66f860ad69889f87e0408f22","modified":1642563116917},{"_id":"themes/Minos/layout/comment/youyan.ejs","hash":"3d6cf9c523a7a5510ec2864bb29f861f9bb78af3","modified":1642563116918},{"_id":"themes/Minos/layout/common/article.ejs","hash":"3f0ae9f2bf5aae5a6824ee824c552a5af9dc98f0","modified":1642563116918},{"_id":"themes/Minos/layout/common/footer.ejs","hash":"cbf141464dbf127294370e843e6a10cd2ac7ea38","modified":1642563116919},{"_id":"themes/Minos/layout/common/head.ejs","hash":"4dd9352ea5f5a59d3af2bedac7d545c08bb08531","modified":1642563116919},{"_id":"themes/Minos/layout/common/languages.ejs","hash":"89665c656a1ffebc9c97f03e7f9c12dd1d90702a","modified":1642563116919},{"_id":"themes/Minos/layout/common/navbar.ejs","hash":"f3aa16f357450651d0454f1ddc06a032f3dc4de3","modified":1642563116920},{"_id":"themes/Minos/layout/common/paginator.ejs","hash":"8f5060e4c8a86a3f4e58455c41c98e831e23e4a4","modified":1642563116921},{"_id":"themes/Minos/layout/common/scripts.ejs","hash":"7a5a5271930423b95046836597e30e31fa708f66","modified":1642563116921},{"_id":"themes/Minos/layout/plugins/clipboard.ejs","hash":"a448757bb8a2c29bd9501c625f7df5087bb18dbe","modified":1642563116922},{"_id":"themes/Minos/layout/plugins/gallery.ejs","hash":"7c2becafdf6b60e677cdd5756b9d55eba2af4944","modified":1642563116923},{"_id":"themes/Minos/layout/plugins/google-analytics.ejs","hash":"2a9d944a60aff7df27def5215bdc071e605c3c42","modified":1642563116923},{"_id":"themes/Minos/layout/plugins/katex.ejs","hash":"c8a7ecdc5802007f8fec46a299790ce4e0834acd","modified":1642563116924},{"_id":"themes/Minos/layout/plugins/mathjax.ejs","hash":"b92fc2b30040e09145d80ebb9bad6813dda8acf2","modified":1642563116924},{"_id":"themes/Minos/layout/search/google-cse.ejs","hash":"a6bf5c30339735126efa7efa684f9eb14dd6136a","modified":1642563116925},{"_id":"themes/Minos/layout/search/insight.ejs","hash":"6fb7d27ef40145d8587b46b44a43516135b5a81a","modified":1642563116925},{"_id":"themes/Minos/layout/share/addthis.ejs","hash":"f1c5f337333009d5f00dfbac4864a16ef8f9cb8d","modified":1642563116926},{"_id":"themes/Minos/layout/share/sharethis.ejs","hash":"4f2c40f790f3be0a4e79db04f02ea41ba2f4d4c0","modified":1642563116927},{"_id":"themes/Minos/source/css/insight.scss","hash":"f785fc6574d2853c660be39b2e3149d4846b577f","modified":1642563116932},{"_id":"themes/Minos/source/css/style.scss","hash":"5c8f648617899ff05c62f27da3bfb91755dff595","modified":1642563116933},{"_id":"themes/Minos/source/js/insight.js","hash":"eb23c31141784eef7300f1d1c548950e77883f56","modified":1642563116936},{"_id":"themes/Minos/source/js/script.js","hash":"6b670ec4f90fb43b21a0bbd750a217af5d8aab6b","modified":1642563116937},{"_id":"themes/Minos/source/images/check.svg","hash":"029b8b3523b7daa4005983b4463cd93408308aab","modified":1642563116934},{"_id":"themes/Minos/source/images/exclamation.svg","hash":"b2db56f2cc13fce73dbea46c7b446d9bcb3bf0fd","modified":1642563116934},{"_id":"themes/Minos/source/images/info.svg","hash":"c8aa387e935ba9a7fa72c5dd000b7d46f2e030c4","modified":1642563116934},{"_id":"themes/Minos/source/images/logo.png","hash":"4e012d9ba58cb8f87ee775262ef871c158ac5948","modified":1642563116934},{"_id":"themes/Minos/source/images/question.svg","hash":"7153fa2a0c21e32da6a1f96a333d8b66a178569d","modified":1642563116935},{"_id":"themes/Minos/source/images/quote-left.svg","hash":"d2561fa8d13e63ff196b71232a5968415ec6e372","modified":1642563116936}],"Category":[],"Data":[],"Page":[{"title":"page1","date":"2022-01-19T02:52:26.000Z","_content":"11","source":"page1/index.md","raw":"---\ntitle: page1\ndate: 2022-01-19 10:52:26\n---\n11","updated":"2022-01-19T02:54:01.903Z","path":"page1/index.html","_id":"ckyky9buh0002rwi43qc7diz1","comments":1,"layout":"page","content":"<p>11</p>\n","site":{"data":{}},"excerpt":"","more":"<p>11</p>\n"}],"Post":[{"title":"webpack5 升级踩坑","date":"2022-01-19T02:52:17.000Z","_content":"1. 安装webpack@5\n    -   `yarn add webpack@^5.36.2 webpack-cli@^4.6.0`\n2. 解决安装过程中提示的版本不兼容warning\n\n    ![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f89dd471a85f4238949f7c0850cf121f~tplv-k3u1fbpfcp-watermark.image)\n\n3. 处理过时的loader、plugin和配置\n    - 移除cache-loader\n    - 移除friendly-errors-webpack-plugin\n    - optimize-css-assets-webpack-plugin 替换为css-minimizer-webpack-plugin\n    - TerserPlugin去掉了sourcmap和cache\n    - 删除 new webpack.optimize.ModuleConcatenationPlugin()\n    - 删除eslint-loader,使用`ESLintPlugin`\n    - 废弃了 raw-loader，url-loader 和 file-loader,新配置参考如下\n        ```\n        {\n\t\t\t\ttest: /\\.(png|jpe?g|gif|svg|eot|woff|woff2|ttf)(\\?.*)?$/,\n\t\t\t\texclude: /(antd)/,\n\t\t\t\ttype: 'asset',\n\t\t\t\tparser: {\n\t\t\t\t\tdataUrlCondition: {\n\t\t\t\t\t\tmaxSize: 10 * 1024 // 10kb\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgenerator: {\n\t\t\t\t\tfilename: `${config.ChunkOutputDirname}assets/img/[name].[hash:7].[ext]` //'static/[hash][ext][query]'\n\t\t\t\t}\n\t\t\n\t\t\t}\n        ```\n4. 根据文档挨个检查处理\n    \n    ![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2a9e90766352487e9445f0db4706ff0c~tplv-k3u1fbpfcp-watermark.image)\n\n5. 常见的报错\n    \n    - dev server 启动报错\n    ![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e01b6f56c7ee4723811457dc17ac563c~tplv-k3u1fbpfcp-watermark.image)\n    解决： 通过`webpack serve`启动dev server\n        ![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3dd4d8486dbf41c5bb421fec5a1a3b39~tplv-k3u1fbpfcp-watermark.image)\n        \n    - plugin引用错误\n\n    ![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3e77c54098c845749ec0c60ee14eeb74~tplv-k3u1fbpfcp-watermark.image)\n    解决： 部分plugin写法变更 `const {WebpackManifestPlugin} = require('webpack-manifest-plugin');`\n    - 打包后文件运行报错Uncaught TypeError: Cannot read property 'dispose' of undefined\n    解决：dev包和本地同时启用了缓存，并缓存保存在同一个目录时会出现混乱，需要将不同环境的缓存区分（生产环境禁止使用缓存）\n\n      ![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/914e69f427bc412a90384306391d10bf~tplv-k3u1fbpfcp-watermark.image)\n    - webpack 5 运行于 Node.js v10.13.0+ 的版本，如果出现打包错误，可以检查版本\n    - 如果配置了splitchunk，HtmlWebpackPlugin的chunks和chunksSortMode需要注意顺序，最好让它自己决定chunks和sort\n","source":"_posts/webpack5 升级踩坑.md","raw":"---\ntitle: webpack5 升级踩坑\ndate: 2022-01-19 10:52:17\ntags:\n---\n1. 安装webpack@5\n    -   `yarn add webpack@^5.36.2 webpack-cli@^4.6.0`\n2. 解决安装过程中提示的版本不兼容warning\n\n    ![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f89dd471a85f4238949f7c0850cf121f~tplv-k3u1fbpfcp-watermark.image)\n\n3. 处理过时的loader、plugin和配置\n    - 移除cache-loader\n    - 移除friendly-errors-webpack-plugin\n    - optimize-css-assets-webpack-plugin 替换为css-minimizer-webpack-plugin\n    - TerserPlugin去掉了sourcmap和cache\n    - 删除 new webpack.optimize.ModuleConcatenationPlugin()\n    - 删除eslint-loader,使用`ESLintPlugin`\n    - 废弃了 raw-loader，url-loader 和 file-loader,新配置参考如下\n        ```\n        {\n\t\t\t\ttest: /\\.(png|jpe?g|gif|svg|eot|woff|woff2|ttf)(\\?.*)?$/,\n\t\t\t\texclude: /(antd)/,\n\t\t\t\ttype: 'asset',\n\t\t\t\tparser: {\n\t\t\t\t\tdataUrlCondition: {\n\t\t\t\t\t\tmaxSize: 10 * 1024 // 10kb\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgenerator: {\n\t\t\t\t\tfilename: `${config.ChunkOutputDirname}assets/img/[name].[hash:7].[ext]` //'static/[hash][ext][query]'\n\t\t\t\t}\n\t\t\n\t\t\t}\n        ```\n4. 根据文档挨个检查处理\n    \n    ![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2a9e90766352487e9445f0db4706ff0c~tplv-k3u1fbpfcp-watermark.image)\n\n5. 常见的报错\n    \n    - dev server 启动报错\n    ![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e01b6f56c7ee4723811457dc17ac563c~tplv-k3u1fbpfcp-watermark.image)\n    解决： 通过`webpack serve`启动dev server\n        ![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3dd4d8486dbf41c5bb421fec5a1a3b39~tplv-k3u1fbpfcp-watermark.image)\n        \n    - plugin引用错误\n\n    ![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3e77c54098c845749ec0c60ee14eeb74~tplv-k3u1fbpfcp-watermark.image)\n    解决： 部分plugin写法变更 `const {WebpackManifestPlugin} = require('webpack-manifest-plugin');`\n    - 打包后文件运行报错Uncaught TypeError: Cannot read property 'dispose' of undefined\n    解决：dev包和本地同时启用了缓存，并缓存保存在同一个目录时会出现混乱，需要将不同环境的缓存区分（生产环境禁止使用缓存）\n\n      ![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/914e69f427bc412a90384306391d10bf~tplv-k3u1fbpfcp-watermark.image)\n    - webpack 5 运行于 Node.js v10.13.0+ 的版本，如果出现打包错误，可以检查版本\n    - 如果配置了splitchunk，HtmlWebpackPlugin的chunks和chunksSortMode需要注意顺序，最好让它自己决定chunks和sort\n","slug":"webpack5 升级踩坑","published":1,"updated":"2022-01-19T03:16:10.350Z","_id":"ckykz3dnc0001d0i42vvh2qin","comments":1,"layout":"post","photos":[],"link":"","content":"<ol>\n<li><p>安装webpack@5</p>\n<ul>\n<li>  <code>yarn add webpack@^5.36.2 webpack-cli@^4.6.0</code></li>\n</ul>\n</li>\n<li><p>解决安装过程中提示的版本不兼容warning</p>\n<p> <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f89dd471a85f4238949f7c0850cf121f~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n</li>\n<li><p>处理过时的loader、plugin和配置</p>\n<ul>\n<li>移除cache-loader</li>\n<li>移除friendly-errors-webpack-plugin</li>\n<li>optimize-css-assets-webpack-plugin 替换为css-minimizer-webpack-plugin</li>\n<li>TerserPlugin去掉了sourcmap和cache</li>\n<li>删除 new webpack.optimize.ModuleConcatenationPlugin()</li>\n<li>删除eslint-loader,使用<code>ESLintPlugin</code></li>\n<li>废弃了 raw-loader，url-loader 和 file-loader,新配置参考如下  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     &#123;</span><br><span class=\"line\">\ttest: /\\.(png|jpe?g|gif|svg|eot|woff|woff2|ttf)(\\?.*)?$/,</span><br><span class=\"line\">\texclude: /(antd)/,</span><br><span class=\"line\">\ttype: &#x27;asset&#x27;,</span><br><span class=\"line\">\tparser: &#123;</span><br><span class=\"line\">\t\tdataUrlCondition: &#123;</span><br><span class=\"line\">\t\t\tmaxSize: 10 * 1024 // 10kb</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tgenerator: &#123;</span><br><span class=\"line\">\t\tfilename: `$&#123;config.ChunkOutputDirname&#125;assets/img/[name].[hash:7].[ext]` //&#x27;static/[hash][ext][query]&#x27;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>根据文档挨个检查处理</p>\n<p> <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2a9e90766352487e9445f0db4706ff0c~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n</li>\n<li><p>常见的报错</p>\n<ul>\n<li>dev server 启动报错<br><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e01b6f56c7ee4723811457dc17ac563c~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"><br>解决： 通过<code>webpack serve</code>启动dev server<br>  <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3dd4d8486dbf41c5bb421fec5a1a3b39~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></li>\n<li>plugin引用错误</li>\n</ul>\n<p> <img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3e77c54098c845749ec0c60ee14eeb74~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"><br> 解决： 部分plugin写法变更 <code>const &#123;WebpackManifestPlugin&#125; = require(&#39;webpack-manifest-plugin&#39;);</code></p>\n<ul>\n<li><p>打包后文件运行报错Uncaught TypeError: Cannot read property ‘dispose’ of undefined<br>解决：dev包和本地同时启用了缓存，并缓存保存在同一个目录时会出现混乱，需要将不同环境的缓存区分（生产环境禁止使用缓存）</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/914e69f427bc412a90384306391d10bf~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n</li>\n<li><p>webpack 5 运行于 Node.js v10.13.0+ 的版本，如果出现打包错误，可以检查版本</p>\n</li>\n<li><p>如果配置了splitchunk，HtmlWebpackPlugin的chunks和chunksSortMode需要注意顺序，最好让它自己决定chunks和sort</p>\n</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>安装webpack@5</p>\n<ul>\n<li>  <code>yarn add webpack@^5.36.2 webpack-cli@^4.6.0</code></li>\n</ul>\n</li>\n<li><p>解决安装过程中提示的版本不兼容warning</p>\n<p> <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f89dd471a85f4238949f7c0850cf121f~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n</li>\n<li><p>处理过时的loader、plugin和配置</p>\n<ul>\n<li>移除cache-loader</li>\n<li>移除friendly-errors-webpack-plugin</li>\n<li>optimize-css-assets-webpack-plugin 替换为css-minimizer-webpack-plugin</li>\n<li>TerserPlugin去掉了sourcmap和cache</li>\n<li>删除 new webpack.optimize.ModuleConcatenationPlugin()</li>\n<li>删除eslint-loader,使用<code>ESLintPlugin</code></li>\n<li>废弃了 raw-loader，url-loader 和 file-loader,新配置参考如下  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     &#123;</span><br><span class=\"line\">\ttest: /\\.(png|jpe?g|gif|svg|eot|woff|woff2|ttf)(\\?.*)?$/,</span><br><span class=\"line\">\texclude: /(antd)/,</span><br><span class=\"line\">\ttype: &#x27;asset&#x27;,</span><br><span class=\"line\">\tparser: &#123;</span><br><span class=\"line\">\t\tdataUrlCondition: &#123;</span><br><span class=\"line\">\t\t\tmaxSize: 10 * 1024 // 10kb</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tgenerator: &#123;</span><br><span class=\"line\">\t\tfilename: `$&#123;config.ChunkOutputDirname&#125;assets/img/[name].[hash:7].[ext]` //&#x27;static/[hash][ext][query]&#x27;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>根据文档挨个检查处理</p>\n<p> <img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2a9e90766352487e9445f0db4706ff0c~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n</li>\n<li><p>常见的报错</p>\n<ul>\n<li>dev server 启动报错<br><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e01b6f56c7ee4723811457dc17ac563c~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"><br>解决： 通过<code>webpack serve</code>启动dev server<br>  <img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3dd4d8486dbf41c5bb421fec5a1a3b39~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></li>\n<li>plugin引用错误</li>\n</ul>\n<p> <img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3e77c54098c845749ec0c60ee14eeb74~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"><br> 解决： 部分plugin写法变更 <code>const &#123;WebpackManifestPlugin&#125; = require(&#39;webpack-manifest-plugin&#39;);</code></p>\n<ul>\n<li><p>打包后文件运行报错Uncaught TypeError: Cannot read property ‘dispose’ of undefined<br>解决：dev包和本地同时启用了缓存，并缓存保存在同一个目录时会出现混乱，需要将不同环境的缓存区分（生产环境禁止使用缓存）</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/914e69f427bc412a90384306391d10bf~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n</li>\n<li><p>webpack 5 运行于 Node.js v10.13.0+ 的版本，如果出现打包错误，可以检查版本</p>\n</li>\n<li><p>如果配置了splitchunk，HtmlWebpackPlugin的chunks和chunksSortMode需要注意顺序，最好让它自己决定chunks和sort</p>\n</li>\n</ul>\n</li>\n</ol>\n"},{"title":"为什么慢两拍：关于promise规范thenable的白话解释","date":"2022-01-19T03:17:15.000Z","_content":"## 慢两拍？\n沸点上看到这样一个问题：\n![f9ebd1bfa73a4ee79f7873f731695a4c_tplv-k3u1fbpfcp-watermark.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4fcd03d8db8d4007845f8aa23a9bcb93~tplv-k3u1fbpfcp-watermark.image?)\n\n类似的问题还有\n\n```\nPromise.resolve().then(() => {\n  console.log(0);\n  return Promise.resolve(4)\n}).then(res => {\n  console.log(res)\n})\n\nPromise.resolve().then(() => {\n  console.log(1);\n}).then(() => {\n  console.log(2);\n}).then(() => {\n  console.log(3);\n}).then(() => {\n  console.log(5);\n}).then(() =>{\n  console.log(6);\n})\n// 0,1,2,3,4,5,6\n```\n大家会发现 return Promise.resolve()慢了两拍。\n\n## why\n虽然可能有个并没什么卵用的知识，但是很神奇，我来试着解释一下：\n\n还是以最上图片中代码为示例：\n\n假设async functin 返回的promise为p0，内部的Promise.resolve()，返回的为p1,\n下面new Promise返回的为p2,p2.then返回的为p3;\n\n### 阶段一\n#### 1. \n执行async内部的Promise.resolve,得到p1，**而p1上有可调用的then**，则在微任务队列中放入一个任务：[NewPromiseResolveThenableJob](https://tc39.es/ecma262/#sec-promise-objects)(promise0, p1, p1.then)，\n> 14.Let job be NewPromiseResolveThenableJob(promise, resolution, thenJobCallback).\n\n> 15. Perform HostEnqueuePromiseJob(job.[[Job]], job.[[Realm]]).\n\n\n\n**此时p0的状态还是pending**，它需要等待p1.then执行之后，也就是说，console.log(1)处于等待中。\n\n#### 2.\nnew Promise同步执行了resolve()，返回p2，并执行then，p2是已解决的，那么往微任务队列中放入console.log(2);再执行then，但是因为console.log(2)的这个then回调还没有执行，因此console.log(3)所在的回调会等待\n\n#### 阶段一结束 \n\n此时微任务队列中有两条任务：NewPromiseResolveThenableJob(p0, p1, p1.then)和console.log(2)；\n\n----\n### 阶段二\n\n#### 3.\n执行job:NewPromiseResolveThenableJob(p0, p1, p1.then)，p1是fulfilled，执行p1.then,它的回调是resolve p0，此时往微任务队列增加一条任务 resolve p0。\n\n*另外，**如果then不是异步的**，比如这样：(async function(){ return {then:(r)=>{r()}};})().then(()=>{console.log(1)});）则在这一步就将p0 resolve掉，并将log(1)放入微任务队列，**则只会慢1拍***\n\n#### 4.\n\n执行console.log(2)\n\n#### 5.\np3被resolved，将console.log(3)放入微任务队列\n\n### 阶段二结束\n此时微任务队列有两个任务，resolve p0和console.log(3)\n\n----\n### 后续阶段\n\n#### 6.\n执行resolve p0，console.log(1)被放入微任务队列\n#### 7.\n执行console.log(3)\n#### 8.\n执行console.log(1)\n\n## 总结：\n如果promise内返回的对象具有可调用的then方法，则会在微任务队列中再**插入一个任务NewPromiseResolveThenableJob，这就慢了一拍**；这个任务会执行这个then方法，如果这个**then方法是来自于promise的，则因为是异步的又慢了一拍**，所以一共慢了两拍。\n\n关于NewPromiseResolveThenableJob：\n> This Job uses the supplied thenable and its then method to resolve the given promise. This process must take place as a Job to ensure that the evaluation of the then method occurs after evaluation of any surrounding code has completed.\n\n具体的解释可以参考https://tc39.es/ecma262/#sec-promise-jobs","source":"_posts/为什么慢两拍：关于promise规范thenable的白话解释.md","raw":"---\ntitle: 为什么慢两拍：关于promise规范thenable的白话解释\ndate: 2022-01-19 11:17:15\ntags:\n---\n## 慢两拍？\n沸点上看到这样一个问题：\n![f9ebd1bfa73a4ee79f7873f731695a4c_tplv-k3u1fbpfcp-watermark.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4fcd03d8db8d4007845f8aa23a9bcb93~tplv-k3u1fbpfcp-watermark.image?)\n\n类似的问题还有\n\n```\nPromise.resolve().then(() => {\n  console.log(0);\n  return Promise.resolve(4)\n}).then(res => {\n  console.log(res)\n})\n\nPromise.resolve().then(() => {\n  console.log(1);\n}).then(() => {\n  console.log(2);\n}).then(() => {\n  console.log(3);\n}).then(() => {\n  console.log(5);\n}).then(() =>{\n  console.log(6);\n})\n// 0,1,2,3,4,5,6\n```\n大家会发现 return Promise.resolve()慢了两拍。\n\n## why\n虽然可能有个并没什么卵用的知识，但是很神奇，我来试着解释一下：\n\n还是以最上图片中代码为示例：\n\n假设async functin 返回的promise为p0，内部的Promise.resolve()，返回的为p1,\n下面new Promise返回的为p2,p2.then返回的为p3;\n\n### 阶段一\n#### 1. \n执行async内部的Promise.resolve,得到p1，**而p1上有可调用的then**，则在微任务队列中放入一个任务：[NewPromiseResolveThenableJob](https://tc39.es/ecma262/#sec-promise-objects)(promise0, p1, p1.then)，\n> 14.Let job be NewPromiseResolveThenableJob(promise, resolution, thenJobCallback).\n\n> 15. Perform HostEnqueuePromiseJob(job.[[Job]], job.[[Realm]]).\n\n\n\n**此时p0的状态还是pending**，它需要等待p1.then执行之后，也就是说，console.log(1)处于等待中。\n\n#### 2.\nnew Promise同步执行了resolve()，返回p2，并执行then，p2是已解决的，那么往微任务队列中放入console.log(2);再执行then，但是因为console.log(2)的这个then回调还没有执行，因此console.log(3)所在的回调会等待\n\n#### 阶段一结束 \n\n此时微任务队列中有两条任务：NewPromiseResolveThenableJob(p0, p1, p1.then)和console.log(2)；\n\n----\n### 阶段二\n\n#### 3.\n执行job:NewPromiseResolveThenableJob(p0, p1, p1.then)，p1是fulfilled，执行p1.then,它的回调是resolve p0，此时往微任务队列增加一条任务 resolve p0。\n\n*另外，**如果then不是异步的**，比如这样：(async function(){ return {then:(r)=>{r()}};})().then(()=>{console.log(1)});）则在这一步就将p0 resolve掉，并将log(1)放入微任务队列，**则只会慢1拍***\n\n#### 4.\n\n执行console.log(2)\n\n#### 5.\np3被resolved，将console.log(3)放入微任务队列\n\n### 阶段二结束\n此时微任务队列有两个任务，resolve p0和console.log(3)\n\n----\n### 后续阶段\n\n#### 6.\n执行resolve p0，console.log(1)被放入微任务队列\n#### 7.\n执行console.log(3)\n#### 8.\n执行console.log(1)\n\n## 总结：\n如果promise内返回的对象具有可调用的then方法，则会在微任务队列中再**插入一个任务NewPromiseResolveThenableJob，这就慢了一拍**；这个任务会执行这个then方法，如果这个**then方法是来自于promise的，则因为是异步的又慢了一拍**，所以一共慢了两拍。\n\n关于NewPromiseResolveThenableJob：\n> This Job uses the supplied thenable and its then method to resolve the given promise. This process must take place as a Job to ensure that the evaluation of the then method occurs after evaluation of any surrounding code has completed.\n\n具体的解释可以参考https://tc39.es/ecma262/#sec-promise-jobs","slug":"为什么慢两拍：关于promise规范thenable的白话解释","published":1,"updated":"2022-01-19T03:18:03.272Z","_id":"ckykz58dy0002d0i44dyj13nh","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"慢两拍？\"><a href=\"#慢两拍？\" class=\"headerlink\" title=\"慢两拍？\"></a>慢两拍？</h2><p>沸点上看到这样一个问题：<br><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4fcd03d8db8d4007845f8aa23a9bcb93~tplv-k3u1fbpfcp-watermark.image\" alt=\"f9ebd1bfa73a4ee79f7873f731695a4c_tplv-k3u1fbpfcp-watermark.png\"></p>\n<p>类似的问题还有</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Promise.resolve().then(() =&gt; &#123;</span><br><span class=\"line\">  console.log(0);</span><br><span class=\"line\">  return Promise.resolve(4)</span><br><span class=\"line\">&#125;).then(res =&gt; &#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">Promise.resolve().then(() =&gt; &#123;</span><br><span class=\"line\">  console.log(1);</span><br><span class=\"line\">&#125;).then(() =&gt; &#123;</span><br><span class=\"line\">  console.log(2);</span><br><span class=\"line\">&#125;).then(() =&gt; &#123;</span><br><span class=\"line\">  console.log(3);</span><br><span class=\"line\">&#125;).then(() =&gt; &#123;</span><br><span class=\"line\">  console.log(5);</span><br><span class=\"line\">&#125;).then(() =&gt;&#123;</span><br><span class=\"line\">  console.log(6);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">// 0,1,2,3,4,5,6</span><br></pre></td></tr></table></figure>\n<p>大家会发现 return Promise.resolve()慢了两拍。</p>\n<h2 id=\"why\"><a href=\"#why\" class=\"headerlink\" title=\"why\"></a>why</h2><p>虽然可能有个并没什么卵用的知识，但是很神奇，我来试着解释一下：</p>\n<p>还是以最上图片中代码为示例：</p>\n<p>假设async functin 返回的promise为p0，内部的Promise.resolve()，返回的为p1,<br>下面new Promise返回的为p2,p2.then返回的为p3;</p>\n<h3 id=\"阶段一\"><a href=\"#阶段一\" class=\"headerlink\" title=\"阶段一\"></a>阶段一</h3><h4 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1.\"></a>1.</h4><p>执行async内部的Promise.resolve,得到p1，<strong>而p1上有可调用的then</strong>，则在微任务队列中放入一个任务：<a href=\"https://tc39.es/ecma262/#sec-promise-objects\">NewPromiseResolveThenableJob</a>(promise0, p1, p1.then)，</p>\n<blockquote>\n<p>14.Let job be NewPromiseResolveThenableJob(promise, resolution, thenJobCallback).</p>\n</blockquote>\n<blockquote>\n<ol start=\"15\">\n<li>Perform HostEnqueuePromiseJob(job.[[Job]], job.[[Realm]]).</li>\n</ol>\n</blockquote>\n<p><strong>此时p0的状态还是pending</strong>，它需要等待p1.then执行之后，也就是说，console.log(1)处于等待中。</p>\n<h4 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2.\"></a>2.</h4><p>new Promise同步执行了resolve()，返回p2，并执行then，p2是已解决的，那么往微任务队列中放入console.log(2);再执行then，但是因为console.log(2)的这个then回调还没有执行，因此console.log(3)所在的回调会等待</p>\n<h4 id=\"阶段一结束\"><a href=\"#阶段一结束\" class=\"headerlink\" title=\"阶段一结束\"></a>阶段一结束</h4><p>此时微任务队列中有两条任务：NewPromiseResolveThenableJob(p0, p1, p1.then)和console.log(2)；</p>\n<hr>\n<h3 id=\"阶段二\"><a href=\"#阶段二\" class=\"headerlink\" title=\"阶段二\"></a>阶段二</h3><h4 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3.\"></a>3.</h4><p>执行job:NewPromiseResolveThenableJob(p0, p1, p1.then)，p1是fulfilled，执行p1.then,它的回调是resolve p0，此时往微任务队列增加一条任务 resolve p0。</p>\n<p><em>另外，<strong>如果then不是异步的</strong>，比如这样：(async function(){ return {then:(r)=&gt;{r()}};})().then(()=&gt;{console.log(1)});）则在这一步就将p0 resolve掉，并将log(1)放入微任务队列，<strong>则只会慢1拍</strong></em></p>\n<h4 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4.\"></a>4.</h4><p>执行console.log(2)</p>\n<h4 id=\"5\"><a href=\"#5\" class=\"headerlink\" title=\"5.\"></a>5.</h4><p>p3被resolved，将console.log(3)放入微任务队列</p>\n<h3 id=\"阶段二结束\"><a href=\"#阶段二结束\" class=\"headerlink\" title=\"阶段二结束\"></a>阶段二结束</h3><p>此时微任务队列有两个任务，resolve p0和console.log(3)</p>\n<hr>\n<h3 id=\"后续阶段\"><a href=\"#后续阶段\" class=\"headerlink\" title=\"后续阶段\"></a>后续阶段</h3><h4 id=\"6\"><a href=\"#6\" class=\"headerlink\" title=\"6.\"></a>6.</h4><p>执行resolve p0，console.log(1)被放入微任务队列</p>\n<h4 id=\"7\"><a href=\"#7\" class=\"headerlink\" title=\"7.\"></a>7.</h4><p>执行console.log(3)</p>\n<h4 id=\"8\"><a href=\"#8\" class=\"headerlink\" title=\"8.\"></a>8.</h4><p>执行console.log(1)</p>\n<h2 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h2><p>如果promise内返回的对象具有可调用的then方法，则会在微任务队列中再<strong>插入一个任务NewPromiseResolveThenableJob，这就慢了一拍</strong>；这个任务会执行这个then方法，如果这个<strong>then方法是来自于promise的，则因为是异步的又慢了一拍</strong>，所以一共慢了两拍。</p>\n<p>关于NewPromiseResolveThenableJob：</p>\n<blockquote>\n<p>This Job uses the supplied thenable and its then method to resolve the given promise. This process must take place as a Job to ensure that the evaluation of the then method occurs after evaluation of any surrounding code has completed.</p>\n</blockquote>\n<p>具体的解释可以参考<a href=\"https://tc39.es/ecma262/#sec-promise-jobs\">https://tc39.es/ecma262/#sec-promise-jobs</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"慢两拍？\"><a href=\"#慢两拍？\" class=\"headerlink\" title=\"慢两拍？\"></a>慢两拍？</h2><p>沸点上看到这样一个问题：<br><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4fcd03d8db8d4007845f8aa23a9bcb93~tplv-k3u1fbpfcp-watermark.image\" alt=\"f9ebd1bfa73a4ee79f7873f731695a4c_tplv-k3u1fbpfcp-watermark.png\"></p>\n<p>类似的问题还有</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Promise.resolve().then(() =&gt; &#123;</span><br><span class=\"line\">  console.log(0);</span><br><span class=\"line\">  return Promise.resolve(4)</span><br><span class=\"line\">&#125;).then(res =&gt; &#123;</span><br><span class=\"line\">  console.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">Promise.resolve().then(() =&gt; &#123;</span><br><span class=\"line\">  console.log(1);</span><br><span class=\"line\">&#125;).then(() =&gt; &#123;</span><br><span class=\"line\">  console.log(2);</span><br><span class=\"line\">&#125;).then(() =&gt; &#123;</span><br><span class=\"line\">  console.log(3);</span><br><span class=\"line\">&#125;).then(() =&gt; &#123;</span><br><span class=\"line\">  console.log(5);</span><br><span class=\"line\">&#125;).then(() =&gt;&#123;</span><br><span class=\"line\">  console.log(6);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">// 0,1,2,3,4,5,6</span><br></pre></td></tr></table></figure>\n<p>大家会发现 return Promise.resolve()慢了两拍。</p>\n<h2 id=\"why\"><a href=\"#why\" class=\"headerlink\" title=\"why\"></a>why</h2><p>虽然可能有个并没什么卵用的知识，但是很神奇，我来试着解释一下：</p>\n<p>还是以最上图片中代码为示例：</p>\n<p>假设async functin 返回的promise为p0，内部的Promise.resolve()，返回的为p1,<br>下面new Promise返回的为p2,p2.then返回的为p3;</p>\n<h3 id=\"阶段一\"><a href=\"#阶段一\" class=\"headerlink\" title=\"阶段一\"></a>阶段一</h3><h4 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1.\"></a>1.</h4><p>执行async内部的Promise.resolve,得到p1，<strong>而p1上有可调用的then</strong>，则在微任务队列中放入一个任务：<a href=\"https://tc39.es/ecma262/#sec-promise-objects\">NewPromiseResolveThenableJob</a>(promise0, p1, p1.then)，</p>\n<blockquote>\n<p>14.Let job be NewPromiseResolveThenableJob(promise, resolution, thenJobCallback).</p>\n</blockquote>\n<blockquote>\n<ol start=\"15\">\n<li>Perform HostEnqueuePromiseJob(job.[[Job]], job.[[Realm]]).</li>\n</ol>\n</blockquote>\n<p><strong>此时p0的状态还是pending</strong>，它需要等待p1.then执行之后，也就是说，console.log(1)处于等待中。</p>\n<h4 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2.\"></a>2.</h4><p>new Promise同步执行了resolve()，返回p2，并执行then，p2是已解决的，那么往微任务队列中放入console.log(2);再执行then，但是因为console.log(2)的这个then回调还没有执行，因此console.log(3)所在的回调会等待</p>\n<h4 id=\"阶段一结束\"><a href=\"#阶段一结束\" class=\"headerlink\" title=\"阶段一结束\"></a>阶段一结束</h4><p>此时微任务队列中有两条任务：NewPromiseResolveThenableJob(p0, p1, p1.then)和console.log(2)；</p>\n<hr>\n<h3 id=\"阶段二\"><a href=\"#阶段二\" class=\"headerlink\" title=\"阶段二\"></a>阶段二</h3><h4 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3.\"></a>3.</h4><p>执行job:NewPromiseResolveThenableJob(p0, p1, p1.then)，p1是fulfilled，执行p1.then,它的回调是resolve p0，此时往微任务队列增加一条任务 resolve p0。</p>\n<p><em>另外，<strong>如果then不是异步的</strong>，比如这样：(async function(){ return {then:(r)=&gt;{r()}};})().then(()=&gt;{console.log(1)});）则在这一步就将p0 resolve掉，并将log(1)放入微任务队列，<strong>则只会慢1拍</strong></em></p>\n<h4 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4.\"></a>4.</h4><p>执行console.log(2)</p>\n<h4 id=\"5\"><a href=\"#5\" class=\"headerlink\" title=\"5.\"></a>5.</h4><p>p3被resolved，将console.log(3)放入微任务队列</p>\n<h3 id=\"阶段二结束\"><a href=\"#阶段二结束\" class=\"headerlink\" title=\"阶段二结束\"></a>阶段二结束</h3><p>此时微任务队列有两个任务，resolve p0和console.log(3)</p>\n<hr>\n<h3 id=\"后续阶段\"><a href=\"#后续阶段\" class=\"headerlink\" title=\"后续阶段\"></a>后续阶段</h3><h4 id=\"6\"><a href=\"#6\" class=\"headerlink\" title=\"6.\"></a>6.</h4><p>执行resolve p0，console.log(1)被放入微任务队列</p>\n<h4 id=\"7\"><a href=\"#7\" class=\"headerlink\" title=\"7.\"></a>7.</h4><p>执行console.log(3)</p>\n<h4 id=\"8\"><a href=\"#8\" class=\"headerlink\" title=\"8.\"></a>8.</h4><p>执行console.log(1)</p>\n<h2 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h2><p>如果promise内返回的对象具有可调用的then方法，则会在微任务队列中再<strong>插入一个任务NewPromiseResolveThenableJob，这就慢了一拍</strong>；这个任务会执行这个then方法，如果这个<strong>then方法是来自于promise的，则因为是异步的又慢了一拍</strong>，所以一共慢了两拍。</p>\n<p>关于NewPromiseResolveThenableJob：</p>\n<blockquote>\n<p>This Job uses the supplied thenable and its then method to resolve the given promise. This process must take place as a Job to ensure that the evaluation of the then method occurs after evaluation of any surrounding code has completed.</p>\n</blockquote>\n<p>具体的解释可以参考<a href=\"https://tc39.es/ecma262/#sec-promise-jobs\">https://tc39.es/ecma262/#sec-promise-jobs</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}